JSON
 4. Создать внешний репозиторий c названием JSON. === 1. Перейти на сайт GitHub
						      2. Авторизоваться на сайте
						      3. Перейти в свой профиль
						      4. Во вкладке "Repositories" нажать на кнопку "New" 
						      5. На открывшейся странице: -ввести название репозитория "JSON", 
                                                                                  -выбрать "Public", 
                                                                                  -поставить отметку в чекбоксе "Add a README file"
						      6. Нажать на кнопку "Create repository"
 
5. Клонировать репозиторий JSON на локальный компьютер. === 1. Скопировать ссылку на репозиторий
							    2. git clone https://github.com/sVladimir-36/JSON.git
 
6. Внутри локального JSON создать файл “new.json”. === 1. cd JSON/
						       2. cat > new.json

 7. Добавить файл под гит. === git add new.json
                                
8. Закоммитить файл. === git commit -m "addition new json file"

 9. Отправить файл на внешний GitHub репозиторий. === git push
                                                      Enumerating objects: 4, done.
                                                      Counting objects: 100% (4/4), done.
                                                      Delta compression using up to 4 threads
                                                      Compressing objects: 100% (2/2), done.
                                                      Writing objects: 100% (3/3), 283 bytes | 283.00 KiB/s, done.
                                                      Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
                                                      To https://github.com/sVladimir-36/JSON.git
                                                      6ee95a8..a0d7eb9  main -> main
 
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. === vim new.json
                  {
                  "surname": "suvorin",
                  "name": "vladimir",
                  "patronymic": "alexandrovich",
                  "age": 32,
                  "pets quantity":"2",
                  "desired salary": 70000
                   }
 11. Отправить изменения на внешний репозиторий.===1)git add new.json
                                                   2)git commit -m "new changes in json-file"
                                                   3)git push
                                                   	Enumerating objects: 5, done.
                                                  	Counting objects: 100% (5/5), done.
                                                   	Delta compression using up to 4 threads
                                                   	Compressing objects: 100% (3/3), done.
                                                   	Writing objects: 100% (3/3), 394 bytes | 394.00 KiB/s, done.
                                                   	Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
                                                   	To https://github.com/sVladimir-36/JSON.git
                                                   	a0d7eb9..ed42578  main -> main

 12. Создать файл preferences.json=== cat preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.=== vim preferences.json
				{
        			"favorite_movie":"a knight's_tale",
        			"favorite_series":"game_of_thrones",
        			"favorite_food":"fried_fish",
        			"favorite_time_of_the_year":"[spring, summer]",
        			"the_country_which_i_want_to_visit":"[Croatia, Czech]"
        			}
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON=== vim skills.json
{
        "skills":
                [
                        {"basic_theory":
                                        ["what is testing",
                                        "bag repors",
                                        "documentation",
                                        "testing types",
                                        "testing methods",
                                        "testing directions",
                                        "SDLC",
                                        "STLC",
                                        "client-server architecture"
                                        ]
                        },
                        {"HTTP":
                                        ["request methods",
                                        "response codes",
                                        "HTTP request and response structure"
                                        ]
                        },
                        {"JSON": "structure"},
                        {"XML": "structure"},
                        {"API testing":
                                        ["Postman",
                                        "JS",
                                        "API autotests"
                                        ]
                        },
                        {"Logs":         ["removing, reading"]},
                        {"Sniffers":     ["Fiddler, Charles"]},
                        {"DevTools":     ["Google Chrome, Firefox"]},
                        {"VPN":          ["what for",
                                         "how to use",
                                         "instruments"
                                        ]
                        },
                        {"Mobile testing":
                                        ["iOs",
                                        "Android",
                                        "guidelines",
                                        "xCode",
                                        "Androidstudio",
                                        "ADB",
                                        "setting VPN and Proxy on mobile devices",
                                        "mobile traffic sniffing"
                                        ]
                        },
                        {"Linux terminal": ["copying, creating, moving, view"]},
                        {"SQL":["Create, Delete, Drop, Inser Into, Select, Join, From, Where"]},
                        {"Postgres": ["installation, using, setting"]},
                        {"Redis": ["installation, using, setting"]},
                        {"JMeter":"using"},
                        {"Python": ["basics, application creation"]}

                ]
}

 15. Отправить сразу 2 файла на внешний репозиторий.=== 1) git add .
							2) git commit -m "adding skills.json and preferences.json"
							3) git push

 16. На веб интерфейсе создать файл bug_report.json.=== 		1) в репозитории "JSON" нажать кнопку "Add file"
									2) в открывшемся списке выбрать вариант "Create new file"
									3) в открывшейся вкладке в поле "Name your file..." ввести "bug_report.json"
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.=== 4)в нижней части страницы нажать на кнопку "Commit new file"
 
18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.=== 
	1) в репозитории "JSON" кликнуть мышкой на файл "bug_report.json"
	2) на открывшейся вкладке нажать на кнопку "Edit this file"  (в виде эмблемы карандаша)
	3) в открывшемся окне в текстовом поле ввести:
{
  "bugreport": 
            [{"id": "BR-1"},
             {"header": "the selection of past date is allowed"},
             {"description": "It is allowed to select a past date for ordering a call to the organization"},
             {"environment": ["Windows_10_64_bit, Google_Chrome_98.0.4758.102"]},
             {"severity": "major"},
             {"priority": "high"},
             {"steps to reproduce": 
                                    [{"1": "Open the page..."},
                                     {"2": "Go to 'Feedback' page"},
                                     {"3": "Go to the form 'Select the day of the week'"},
                                     {"4": "In the calendar that opens, select any past date, for example: 11.01.2021"},
                                     {"5": "In the field 'Phone number' enter the number: '+7-999-999-99-99'"},
                                     {"6": "In the time selection form, in the 'From' radiobutton, select the value '09'"},
                                     {"7": "In the 'To' radio button, select the value '16'"},
                                     {"8": "Click on the 'Call me back' button"}
                                    ]
             },
             {"Actual result": "The page displays the message 'Thank you, we will call you back at the specified time' and the buttons 'Thank you' and 'Change call                                 time'"},
             {"Expected result": "A notification appears stating that an incorrect date has been selected. 'Call me back' button is not clickable"},
             {"attachment": "screenshots"},
             {"assigned to": "manager"}
            ]
}

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.=== 1) проскроллить страницу вниз до блока "Commit changes"
									2) в нижней части блока "Commit changes" нажать на зеленую кнопку "Commit changes"

 20. Синхронизировать внешний и локальный репозиторий JSON === git pull


 XML
 21. Создать внешний репозиторий c названием XML.=== 1) Во вкладке "Repositories" нажать на кнопку "New" 
						     2) На открывшейся странице: -ввести название репозитория "JSON", 
                                                                                  -выбрать "Public", 
                                                                                  -поставить отметку в чекбоксе "Add a README file"
						     3) Нажать на кнопку "Create repository"

 22. Клонировать репозиторий XML на локальный компьютер.=== 1) Скопировать ссылку на репозиторий
							    2) git clone https://github.com/sVladimir-36/XML.git
 
 23. Внутри локального XML создать файл “new.xml”.=== cat > new.xml

 24. Добавить файл под гит.=== git add new.xml

 25. Закоммитить файл.===git commit -m "add first xml_file"

 26. Отправить файл на внешний GitHub репозиторий.=== git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.=== 1) vim new.xml
		2) <?xml version="1.0" encoding="UTF-8"?>
		   <private_information>
        		<surname>suvorin</surname>
        		<name>vladimir</name>
        		<patronymic>alexandrovich</patronymic>
        		<age>32</age>
        		<pets_quantity>2</pets_quantity>
        		<future_salary>70000</future_salary>
		   </private_information>

 28. Отправить изменения на внешний репозиторий.=== 1)git add new.xml
                                                    2)git commit -m "editing xml-file"
                                                    3)git push
 29. Создать файл preferences.xml=== cat > preferences.xml
				    
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.=== 1)vim preferences.xml
			    2)<?xml version="1.0" encoding="UTF-8"?>
					<favorite_things>
        						<favorite_movie>a knight's tale</favorite_movie>
        						<favorite_series>game_of_thrones</favorite_series>
        						<favorite_food>fried fish</favorite_food>
        						<favorite_time_of_the_year>spring and summer</favorite_time_of_the_year>
        						<the_country_which_i_want_to_visit>Croatia and Czech</the_country_which_i_want_to_visit>
					</favorite_things>	

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML===
					1)vim skills.xml
					2)<?xml version="1.0" encoding="UTF-8"?>
					<skills>
       						 <basic_theory>test documentation, testing types, methods, directions, SDLC, STLC, client-server architecture
        					 </basic_theory>
        					 <HTTP>request methods, response codes, HTTP request and response structure</HTTP>
        					 <JSON>structure</JSON>
       						 <XML>structure</XML>
       						 <API_testing>Postman, JS, API autotadting</API_testing>
       						 <logs>removing, reading</logs>
       						 <sniffers>fiddler, charles</sniffers>
       						 <DevTools>Google Chrome, FireFox</DevTools>
       						 <VPN>what for, how to use, instruments</VPN>
       						 <mobile_testing>iOS, Android, guidelines, XCode, Android Studio, ADB</mobile_testing>
       						 <linux_terminal>copying, creating, moving, view</linux_terminal>
       						 <sql>Create, Delete, Drop, Inser Into, Select, Join, From, Where</sql>
       						 <postgres>installation, using, setting</postgres>
       						 <redis>installation, using, setting</redis>
       						 <jmeter>using</jmeter>
       						 <python>basics, application creation</python>
					</skills>

 32. Сделать коммит в одну строку.=== 1) git add .
				      2) git commit -m "added two files at once"
 
 33. Отправить сразу 2 файла на внешний репозиторий.=== git push
 
 34. На веб интерфейсе создать файл bug_report.xml.===1) в репозитории "XML" нажать кнопку "Add file"
						      2) в открывшемся списке выбрать вариант "Create new file"
						      3) в открывшейся вкладке в поле "Name your file..." ввести "bug_report.xml"
 
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.=== в нижней части страницы нажать на кнопку "Commit new file"
 
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.===
                        1) в репозитории "XML" кликнуть мышкой на файл "bug_report.xml"
	                2) на открывшейся вкладке нажать на кнопку "Edit this file"  (в виде эмблемы карандаша)
	                3) в открывшемся окне в текстовом поле ввести:
		<?xml version="1.0" encoding="UTF-8"?>
		<bug_report>
          		<id>BR-1</id>
          		<header>the selection of past date is allowed</header>
          		<description>It is allowed to select a past date for ordering a call to the organization</description>
          		<environment>Windows_10_64_bit, Google_Chrome_98.0.4758.102</environment>
          		<severity>major</severity>
          		<priority>high</priority>
          		<steps_to_reproduce>
                             		<step_1>Open the page </step_1>
                             		<step_2>Go to 'Feedback' page</step_2>
                             		<step_3>Go to the form 'Select the day of the week'</step_3>
                            		<step_4>In the calendar that opens, select any past date, for example: 11.01.2021</step_4>
                             		<step_5>In the field 'Phone number' enter the number: '+7-999-999-99-99'</step_5>
                             		<step_6>In the time selection form, in the 'From' radiobutton, select the value '09'</step_6>
                             		<step_7>In the 'To' radio button, select the value '16'</step_7>
                             		<step_8>Click on the 'Call me back' button</step_8>
          		</steps_to_reproduce>
          		<actual_result>The page displays the message 'Thank you, we will call you back at the specified time' and the buttons 'Thank you' and 'Change 					call time'
			</actual_result>
          		<expected_result>A notification appears stating that an incorrect date has been selected. 'Call me back' button is not clickable
			</expected_result>
          		<attachment>screenshots</attachment>
          		<assigned_to>manager</assigned_to>
		</bug_report>
 
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.=== 1) проскроллить страницу вниз до блока "Commit changes"
									2) в нижней части блока "Commit changes" нажать на зеленую кнопку "Commit changes"
 
 38. Синхронизировать внешний и локальный репозиторий XML===git pull

TXT
 1. Создать внешний репозиторий c названием TXT.===1) Во вкладке "Repositories" нажать на кнопку "New" 
						   2) На открывшейся странице: -ввести название репозитория "TXT", 
                                                                                  -выбрать "Public", 
                                                                                  -поставить отметку в чекбоксе "Add a README file"
						   3) Нажать на кнопку "Create repository"
 
2. Клонировать репозиторий TXT на локальный компьютер.===git clone "https://github.com/sVladimir-36/TXT.git"

 3. Внутри локального TXT создать файл “new.txt”.===touch new.txt

 4. Добавить файл под гит.=== git add new.txt

 5. Закоммитить файл.=== git commit -m "adding another one txt-file"

 6. Отправить файл на внешний GitHub репозиторий.=== git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.=== 1)cat > new.txt
		suvorin vladimir alexandrovich
		32 years old
		two pets
		wished salary= 70000 r

 8. Отправить изменения на внешний репозиторий.=== 1) git commit -a -m "updating file"
						   2) git push

 9. Создать файл preferences.txt=== touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.===1) cat > preferences.txt
			   2) favorite movie - a knight's tale
			      favorite series - game of thrones
			      favorite food - fried fish
			      favorite time of the year - spring and summer
			      the country which i want to visit Croatia and Czech

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT=== 
							1) touch skills.txt
							2) vim skills.txt
							skills:
							basic theory: test documentation, testing types, methods, directions, SDLC, STLC, client-server architecture
							HTTP: request methods, response codes, HTTP request and response structure
							JSON:structure
							XML: structure
							API testing: Postman, JS, API autotadting
							logs: removing, reading
							sniffers: fiddler, charles
							DevTools: Google Chrome, FireFox
							VPN: what for, how to use, instruments
							mobile testing; iOS, Android, guidelines, XCode, Android Studio, ADB
							linux terminal: copying, creating, moving, view
							sql: Create, Delete, Drop, Inser Into, Select, Join, From, Where
							postgres; installation, using, setting
							reddis: installation, using, setting
							jmeter: using
							python: basics, application creation						
													     

 12. Сделать коммит в одну строку.=== 1) git add .
				      2) git commit -m "added two files at once"

 13. Отправить сразу 2 файла на внешний репозиторий.=== git push

 14. На веб интерфейсе создать файл bug_report.txt.=== 1) в репозитории "TXT" нажать кнопку "Add file"
						       2) в открывшемся списке выбрать вариант "Create new file"
						       3) в открывшейся вкладке в поле "Name your file..." ввести "bug_report.txt"

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.=== в нижней части страницы нажать на кнопку "Commit new file"

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.=== 
			1) в репозитории "TXT" кликнуть мышкой на файл "bug_report.txt"
	                2) на открывшейся вкладке нажать на кнопку "Edit this file"  (в виде эмблемы карандаша)
	                3) в открывшемся окне в текстовом поле ввести:
			id:BR-1
			header:the selection of past date is allowed
			description: It is allowed to select a past date for ordering a call to the organization
			environment: Windows 10 64 bit, Google Chrome v.98.0.4758.102
			severity: major
			priority: high
			steps_to_reproduce:
                  			1.Open the page 
                 			2.Go to 'Feedback' page
                  			3.Go to the form 'Select the day of the week'
                  			4.In the calendar that opens, select any past date, for example: 11.01.2021
                  			5.In the field 'Phone number' enter the number: '+7-999-999-99-99'
                  			6.In the time selection form, in the 'From' radiobutton, select the value '09'
                  			7.In the 'To' radio button, select the value '16'
                  			8.Click on the 'Call me back' button
			actual result: The page displays the message 'Thank you, we will call you back at the specified time' and the buttons 'Thank you' and 'Change 					call time'
			expected result: A notification appears stating that an incorrect date has been selected. 'Call me back' button is not clickable
			attachment: screenshots
			assigned to: manager

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.=== 1) проскроллить страницу вниз до блока "Commit changes"
									2) в нижней части блока "Commit changes" нажать на зеленую кнопку "Commit changes"

 18. Синхронизировать внешний и локальный репозиторий TXT=== git pull